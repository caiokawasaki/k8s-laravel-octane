version: '3'
services:
    laravel.fpm:
        build:
            context: .
            target: fpm_server
        image: k8s-application/fpm_server
        environment:
            APP_DEBUG: "true"
        user: "1000:1000"
        volumes:
            - '.:/opt/apps/k8s-application'
        networks:
            - k8s-application
    laravel.web:
        build:
            context: .
            target: web_server
        image: k8s-application/web_server
        ports:
            - '8080:80'
        environment:
            FPM_HOST: "laravel.fpm:9000"
        volumes:
            - './public:/opt/apps/k8s-application/public'
        networks:
            - k8s-application
    laravel.cron:
        build:
            context: .
            target: cron
        image: k8s-application/cron
        volumes:
            - '.:/opt/apps/k8s-application'
        networks:
            - k8s-application
    # laravel.frontend:
    #     build:
    #         context: .
    #         target: frontend
    #     command: ["npm", "run", "watch"]
    #     image: k8s-application/frontend
    #     volumes:
    #         - '.:/opt/apps/k8s-application'
    #         - '/opt/app/node_modules/'
    #     networks:
    #         - k8s-application
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'k8s-application-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - k8s-application
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'k8s-application-redis:/data'
        networks:
            - k8s-application
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    k8s-application:
volumes:
    k8s-application-mysql:
    k8s-application-redis:
